name: Publish Winget Package

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag to package (e.g., 1.2.3)'
        required: false
  release:
    types: [published]
  # workflow_call:
  #   inputs:
  #     tag:
  #       required: false
  #       type: string
  #     additional_parameters:
  #       required: false
  #       type: string

jobs:
  publish-winget:
    runs-on: ubuntu-latest
    env:
      WINGET_FORK_ORG: saptfautomation
      WINGET_UPSTREAM_REPO: microsoft/winget-pkgs
      PACKAGE_ID: SAP.btptf
      BTPTF_BASE_URL: "${{github.repository}}/releases"
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

    steps:
      - name: Set tag
        id: get-tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_call" ]]; then
            echo "TAG=${{ inputs.tag }}" >> $GITHUB_ENV
          else
            latest_tag=$(git describe --tags --abbrev=0 --match "v*")
            echo "TAG=$latest_tag" >> $GITHUB_ENV
          fi
          echo "RELEASE_VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: Clone upstream and set up fork
        run: |
          gh auth login --with-token <<< "$PAT_TOKEN"
          # Check if fork exists
          if ! gh repo view "$FORK_OWNER/winget-pkgs" >/dev/null 2>&1; then
            echo "Fork does not exist. Creating..."
            gh repo fork "$UPSTREAM_REPO" --org "$FORK_OWNER" --remote=false --clone=false
          else
            echo "Fork already exists. Syncing with upstream..."
            gh repo sync "$FORK_OWNER/winget-pkgs" --remote=fork --force
          fi
          cd winget-pkgs
          git remote add upstream https://github.com/$UPSTREAM_REPO.git || true
          git fetch upstream
          git checkout master
          git reset --hard upstream/master
          git pull
          git push fork master --force

      - name: Create new branch
        run: |
          cd winget-pkgs
          BRANCH_NAME="update-$TAG"
          git checkout -b $BRANCH_NAME

      - name: Download binary SAH256 file
        id: download-sha256
        run: |
          curl -L  "$BTPTF_BASE_URL/download/v$TAG/btptf_$RELEASE_VERSION_windows_amd64.exe.sha256" -o btptf_${TAG}_windows_amd64.exe.sha256
          SHA256=$(cat btptf_${TAG}_windows_amd64.exe.sha256 )
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT

      - name: Create winget manifest folder and files
        run: |
          cd winget-pkgs/manifests/s/SAP/btptf
          mkdir -p "$RELEASE_VERSION"
          cp 1.1.0/*.yaml "$RELEASE_VERSION/"

          # Update YAMLs using yq
          yq e -i ".PackageVersion = \"$TAG\"" "$RELEASE_VERSION/SAP.btptf.yaml"
          yq e -i ".PackageVersion = \"$TAG\"" "$RELEASE_VERSION/SAP.btptf.locale.en-US.yaml"
          yq e -i ".PackageVersion = \"$TAG\"" "$RELEASE_VERSION/SAP.btptf.installer.yaml"
          # https://github.com/SAP/terraform-exporter-btp/releases/download/v1.1.0/btptf_1.1.0_windows_amd64.exe
          yq e -i ".ReleaseNotesUrl = \"$BTPTF_BASE_URL/tag/$TAG\"" "$RELEASE_VERSION/SAP.btptf.locale.en-US.yaml"
          
          yq e -i ".Installers[0].InstallerUrl = \"${INSTALLER_BASE_URL}/$TAG/btptf_$RELEASE_VERSION_windows_amd64.exe\"" "$RELEASE_VERSION/SAP.btptf.installer.yaml"
          yq e -i ".Installers[0].InstallerSha256 = \"${{ steps.download-sha256.SHA256 }}\"" "$VERSION_DIR/SAP.btptf.installer.yaml"

      - name: Commit and push
        run: |
          cd winget-pkgs
          git add winget-pkgs/manifests/s/SAP/btptf/$RELEASE_VERSION
          git commit -m "New Version: SAP.btptf version $TAG"
          git push fork HEAD

      - name: Create Pull Request
        run: |
          cd winget-pkgs
          gh pr create --base master --head $WINGET_FORK_ORG:update-$TAG --title "Add SAP.btptf $TAG" --body "Automated PR to publish SAP.btptf version $TAG"
